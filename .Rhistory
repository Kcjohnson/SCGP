library(BSgenome.Hsapiens.UCSC.hg38)
library(BSgenome.Hsapiens.UCSC.hg38)
seqnames(BSgenome.Hsapiens.UCSC.hg38)
convention_chrs <- seqnames(BSgenome.Hsapiens.UCSC.hg38)[1:25]
hg38 <- BSgenome.Hsapiens.UCSC.hg38
chr1 <- hg38$chr1
countPattern("CCGG", chr1, max.mismatch=0)
MspI_counts <- numeric()
for (seqs in convention_chrs) {
print (seqs)
MspI_count<- countPattern("CCGG", hg38[[seqs]], max.mismatch=0)
print (MspI_counts)
MspI_counts<- c(MspI_counts, MspI_count)
}
MspI <- data.frame(chr=convention_chrs, MspI=MspI_counts)
sum(MspI$MspI)
MspI$chr <- factor(MspI$chr, levels = c("chr1", "chr2", "chr3", "chr4", "chr5", "chr6", "chr7", "chr8", "chr9",
"chr10", "chr11", "chr12", "chr13", "chr14", "chr15", "chr16", "chr17",
"chr18", "chr19", "chr20", "chr21", "chr22", "chrX", "chrY", "chrM"))
ggplot(MspI, aes(x=chr, y=MspI)) + geom_bar(stat = "identity") +
ylab("MspI Fragments") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(ggplot2)
ggplot(MspI, aes(x=chr, y=MspI)) + geom_bar(stat = "identity") +
ylab("MspI Fragments") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
setwd("/Users/johnsk/Documents/Life-History/GLASS-WG/")
HK_file_path = "data/sequencing-information/HK/tmp-hk-path-list.txt"
HK_meta_path = "data/sequencing-information/HK/hong-kong-sample-maps.txt"
life_history_barcodes = "data/sequencing-information/master_life_history_uniform_naming_incomplete.txt"
#######################################################
library(tidyverse)
library(openxlsx)
library(rjson)
library(jsonlite)
library(listviewer)
hk_df = read.table(HK_file_path, col.names="file_name", stringsAsFactors = F)
hk_df$sample_id = sub(".*/WG_ *(.*?) *_USPD.*", "\\1", hk_df$file_name)
HongKong_covars =  read.table(HK_meta_path, header = T, stringsAsFactors = F)
HongKong_covars$Verhaak_Sample_ID = gsub("-","_", HongKong_covars$Verhaak_Sample_ID)
hk_map_df = HongKong_covars %>% left_join(hk_df, by = c("Verhaak_Sample_ID" = "sample_id"))
barcodes = read_tsv(life_history_barcodes)
barcodes$Original_ID = gsub("-","_", barcodes$Original_ID)
barcodes_reformatted = barcodes %>%
select(uuid, Original_ID, Barcode)
hk_map_barcode_df = hk_map_df %>% left_join(barcodes_reformatted, by = c("Verhaak_Sample_ID" = "Original_ID"))
hk_rg_df = hk_map_barcode_df %>%
mutate(case_id = substr(Barcode, 1, 12)) %>%
mutate(case_project = "hong_kong") %>%
rename(sample_id = Barcode) %>%
mutate(rg_PL = "ILLUMINA") %>%
mutate(file_format = "FQ") %>%
mutate(rg_DT = strftime(as.POSIXlt(Sys.time(), "UTC", "%Y-%m-%dT%H:%M:%S"), "%Y-%m-%dT%H:%M:%S%z")) %>%
mutate(rg_PU = paste(substr(file_name, nchar(file_name)-19, nchar(file_name)-12),
substr(file_name, nchar(file_name)-9, nchar(file_name)-9), sep=".")) %>%
mutate(rg_LB = sub(".*_ *(.*?) *_H.*", "\\1", file_name)) %>%
mutate(sample_type = recode_factor(Sample_Type, "Primary" = "Primary Tumor", "Blood" = "Blood Derived Normal", "Recurrence" = "First Recurrence Tumor")) %>%
mutate(sample_type_code = recode_factor(sample_type, "Primary Tumor" = "TP", "Blood Derived Normal" = "NB", "First Recurrence Tumor" = "R1")) %>%
mutate(rg_SM = sample_id) %>%
mutate(rg_CN = "NVGN_HK") %>%
mutate(rg_ID = paste0(substring(rg_PU, 1, 4), substring(rg_PU, nchar(rg_PU)-1, nchar(rg_PU)), "")) %>%
select(-one_of("GT_Sample_ID", "Patient_ID", "Cohort", "Sex", "Age", "Sample_Type", "Seq_Type", "SeqMachine", "WGS_ReadLength", "Verhaak_Sample_ID", "uuid"))
nested_filtered_files_rgs = hk_rg_df %>%
select(starts_with("case"), starts_with("sample"), starts_with("file"), starts_with("rg")) %>%
nest(-starts_with("case"), -starts_with("sample"), -starts_with("file"), .key=readgroups) %>% # starts_with("rg")
nest(-starts_with("case"), -starts_with("sample"), .key=files) %>%
nest(-starts_with("case"), .key=samples)
jsonlite::toJSON(nested_filtered_files_rgs, pretty = T)
write(jsonlite::toJSON(nested_filtered_files_rgs, pretty = T), file = "data/sequencing-information/HK/hk-nested-rgs-test.json")
mybasedir = "/Users/johnsk/Documents/Life-History/GLASS-WG/"
setwd(mybasedir)
master_log_path = "/data/clinical-data/MDACC/MDA-Clinical-Dataset/Master Log for WGS_26Apr2018wData.xlsx"
molecular_profile_path = "/data/clinical-data/MDACC/MDA-Clinical-Dataset/Molecular_Profiles_With_Wildtypes_39_final.xlsx"
performance_path = "/data/clinical-data/MDACC/MDA-Clinical-Dataset/Perfomance_Status_39_final.xlsx"
biomarker_path = "/data/clinical-data/MDACC/MDA-Clinical-Dataset/Protocol_Biomarker_39_final.xlsx"
matched_pairs_path = "/data/clinical-data/MDACC/MDA-Matched-Pairs/Proactive Matched Pairs prioritized_9June2017.xlsx"
NVGN_seq_path = "/data/sequencing-information/MDACC/C202SC18030593_qc_20180423/src/tables/qc.summary.xlsx"
library(tidyr)
library(dplyr)
library(openxlsx)
library(rjson)
library(jsonlite)
library(purrr)
library(listviewer)
library(ggplot2)
library(forcats)
MDA_master = readWorkbook(master_log_path, sheet = 2, startRow = 1, colNames = TRUE)
setwd(mybasedir)
getwd()
master_log_path = "/data/clinical-data/MDACC/MDA-Clinical-Dataset/Master Log for WGS_26Apr2018wData.xlsx"
MDA_master = readWorkbook(master_log_path, sheet = 2, startRow = 1, colNames = TRUE)
mybasedir = "/Users/johnsk/Documents/Life-History/GLASS-WG/"
setwd(mybasedir)
master_log_path = "/data/clinical-data/MDACC/MDA-Clinical-Dataset/Master Log for WGS_26Apr2018wData.xlsx"
library(tidyr)
library(dplyr)
library(openxlsx)
library(rjson)
library(jsonlite)
library(purrr)
library(listviewer)
library(ggplot2)
library(forcats)
MDA_master = readWorkbook(master_log_path, sheet = 2, startRow = 1, colNames = TRUE)
master_log_path = "/Users/johnsk/Documents/Life-History/GLASS-WG/data/clinical-data/MDACC/MDA-Clinical-Dataset/Master Log for WGS_26Apr2018wData.xlsx"
MDA_master = readWorkbook(master_log_path, sheet = 2, startRow = 1, colNames = TRUE)
mybasedir = "/Users/johnsk/Documents/Life-History/GLASS-WG"
setwd(mybasedir)
master_log_path = "data/clinical-data/MDACC/MDA-Clinical-Dataset/Master Log for WGS_26Apr2018wData.xlsx"
MDA_master = readWorkbook(master_log_path, sheet = 2, startRow = 1, colNames = TRUE)
n_distinct(substring(MDA_master$Jax.Lib.Prep.Customer.Sample.Name, 1, 17)) # all 39 samples are present in the master file
n_distinct(MDA_master$mdacc_sx_acc) # all 81 distinct samples are present in the master file
prioritized_pairs = readWorkbook(matched_pairs_path, sheet = 5, startRow = 1, colNames = TRUE)
molecular_profile_path = "data/clinical-data/MDACC/MDA-Clinical-Dataset/Molecular_Profiles_With_Wildtypes_39_final.xlsx"
performance_path = "data/clinical-data/MDACC/MDA-Clinical-Dataset/Perfomance_Status_39_final.xlsx"
biomarker_path = "data/clinical-data/MDACC/MDA-Clinical-Dataset/Protocol_Biomarker_39_final.xlsx"
matched_pairs_path = "data/clinical-data/MDACC/MDA-Matched-Pairs/Proactive Matched Pairs prioritized_9June2017.xlsx"
NVGN_seq_path = "data/sequencing-information/MDACC/C202SC18030593_qc_20180423/src/tables/qc.summary.xlsx"
match(MDA_master$mdacc_sx_acc, prioritized_pairs$mdacc_sx_acc)
prioritized_pairs = readWorkbook(matched_pairs_path, sheet = 5, startRow = 1, colNames = TRUE)
match(MDA_master$mdacc_sx_acc, prioritized_pairs$mdacc_sx_acc)
MDA_molecular = readWorkbook(molecular_profile_path, sheet = 1, startRow = 1, colNames = TRUE)
glimpse(MDA_molecular)
length(unique(MDA_molecular$MRN)) # 32 unique patients in this set.
n_distinct(MDA_molecular$SAccession) # 46 unique tumors.
MDA_molecular %>%
filter(Gene %in% c("1p19q_LOH", "IDH1")) %>%
group_by(Panel) %>% summarise(n = n(), AvailTests = n_distinct(Panel)) # 9 distinct clinical tests.
MDA_molecular %>%
group_by(MRN, Panel) %>%
summarize(Hits = n_distinct(Panel)) %>%
ggplot(aes(x=fct_rev(fct_infreq(MRN)), fill=Panel)) + geom_bar(position = 'stack') + theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) + ylab("Unique Clinical Tests") + xlab("MD Anderson MRN")
MDA_molecular %>%
group_by(MRN) %>%
filter(Gene == "IDH1")
MDA_molecular %>%
group_by(MRN) %>%
filter(MRN == "958398", Gene == "IDH1")
MDA_molecular %>%  group_by(AltCategory) %>% summarise(my_cnt1 = n())
MDA_molecular %>%  group_by(MRN) %>% summarise(count = n_distinct(AltCategory))
MD_Alterations = MDA_molecular %>%  group_by(AltCategory) %>% summarise(count = n_distinct(MRN))
View(MD_Alterations)
table(sapply(strsplit(MDA_molecular$AltCategory, "_"), "[", 2))
tmp = MDA_molecular %>% group_by(MRN, SampleCollectionDate) %>% filter(Gene=='IDH2')
table(tmp$AltCategory)
IDH2_tmp = MDA_molecular %>% group_by(MRN, SampleCollectionDate) %>% filter(Gene=='IDH2')
IDH2_tmp = MDA_molecular %>% group_by(MRN, SampleCollectionDate) %>% filter(Gene=='IDH2')
table(IDH2_tmp$AltCategory)
IDH1_1p19q = MDA_molecular %>%
filter(Gene %in% c("1p19q_LOH", "IDH1"))
MDA_performance = readWorkbook(performance_path, sheet = 1, startRow = 1, colNames = TRUE)
MDA_performance = readWorkbook(performance_path, sheet = 1, startRow = 1, colNames = TRUE)
Patient_Karnofsky = MDA_performance %>%
separate(Value, c("Score", "Description")) %>%
group_by(MRN) %>%
summarise(avg_karnofsky = median(as.numeric(Score)))
mybasedir = "/Users/johnsk/Documents/Life-History/GLASS-WG"
setwd(mybasedir)
# Clinical data provided by Kristin at MD Anderson Neuro-Oncology group.
master_log_path = "data/clinical-data/MDACC/MDA-Clinical-Dataset/Master Log for WGS_26Apr2018wData.xlsx"
molecular_profile_path = "data/clinical-data/MDACC/MDA-Clinical-Dataset/Molecular_Profiles_With_Wildtypes_39_final.xlsx"
performance_path = "data/clinical-data/MDACC/MDA-Clinical-Dataset/Perfomance_Status_39_final.xlsx"
biomarker_path = "data/clinical-data/MDACC/MDA-Clinical-Dataset/Protocol_Biomarker_39_final.xlsx"
matched_pairs_path = "data/clinical-data/MDACC/MDA-Matched-Pairs/Proactive Matched Pairs prioritized_9June2017.xlsx"
NVGN_seq_path = "data/sequencing-information/MDACC/C202SC18030593_qc_20180423/src/tables/qc.summary.xlsx"
#######################################################
# Necessary packages.
library(tidyr)
library(dplyr)
library(openxlsx)
library(rjson)
library(jsonlite)
library(purrr)
library(listviewer)
library(ggplot2)
library(forcats)
#######################################################
#### Master ###
# Kristin kindly pointed me to the sequencing identifier link to these samples.
MDA_master = readWorkbook(master_log_path, sheet = 2, startRow = 1, colNames = TRUE)
# "mdacc_sx_acc" or "MRN" can link to other files.
# "Jax.Lib.Prep.Customer.Sample.Name" contains the file name submitted to Novogene.
n_distinct(substring(MDA_master$Jax.Lib.Prep.Customer.Sample.Name, 1, 17)) # all 39 samples are present in the master file
n_distinct(MDA_master$mdacc_sx_acc) # all 81 distinct samples are present in the master file
# Do any of the "mdacc_sx_acc" match the blood: "mdacc_sx_acc"?
prioritized_pairs = readWorkbook(matched_pairs_path, sheet = 5, startRow = 1, colNames = TRUE)
match(MDA_master$mdacc_sx_acc, prioritized_pairs$mdacc_sx_acc)
### Molecular Profiles ###
# To determine the proportion of molecular subtype in the MD Anderson dataset
# let's peak into the molecular profile file provided by Kristin (MDA).
MDA_molecular = readWorkbook(molecular_profile_path, sheet = 1, startRow = 1, colNames = TRUE)
# Inspect the data.frame provided that needs to be tidied up.
glimpse(MDA_molecular)
# The primary identifier is "MRN:Medical Record Number". Only 32/39 patients with molecular information.
length(unique(MDA_molecular$MRN)) # 32 unique patients in this set.
n_distinct(MDA_molecular$SAccession) # 46 unique tumors.
# We are primarily interested in the WHO subtype. List the methods used to measure 1p19q_LOH and IDH1.
MDA_molecular %>%
filter(Gene %in% c("1p19q_LOH", "IDH1")) %>%
group_by(Panel) %>% summarise(n = n(), AvailTests = n_distinct(Panel)) # 9 distinct clinical tests.
# Let's examine the distribution of clincial tests across patients (range from 1 to 6 tests).
MDA_molecular %>%
group_by(MRN, Panel) %>%
summarize(Hits = n_distinct(Panel)) %>%
ggplot(aes(x=fct_rev(fct_infreq(MRN)), fill=Panel)) + geom_bar(position = 'stack') + theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) + ylab("Unique Clinical Tests") + xlab("MD Anderson MRN")
# Some subjects have multiple clinical tests for the same gene, with different results.
MDA_molecular %>%
group_by(MRN) %>%
filter(Gene == "IDH1")
# Specifically, subject '958398' with a non-canonical IDH1 mutation K115Q.
# This may be a common variant, check ExAC database.
MDA_molecular %>%
group_by(MRN) %>%
filter(MRN == "958398", Gene == "IDH1")
# Need to classify the 32 patients into IDH and 1p19q status accounting for multiple measurements.
MD_Alterations = MDA_molecular %>%  group_by(AltCategory) %>% summarise(count = n_distinct(MRN))
# Retrieve information about how the AltCategory is coded:
table(sapply(strsplit(MDA_molecular$AltCategory, "_"), "[", 2))
# "wildtype" is common for identifying no variant. "Mutation", "LOH", "R132H" are common for identifying variants.
# We are interested in subjects whose tumor is IDHmut and LOH positive. There are no IDH2 mutants in this cohort.
IDH2_tmp = MDA_molecular %>% group_by(MRN, SampleCollectionDate) %>% filter(Gene=='IDH2')
table(IDH2_tmp$AltCategory)
MDA_performance = readWorkbook(performance_path, sheet = 1, startRow = 1, colNames = TRUE)
Patient_Karnofsky = MDA_performance %>%
separate(Value, c("Score", "Description")) %>%
group_by(MRN) %>%
summarise(avg_karnofsky = median(as.numeric(Score)))
MDA_performance
MDA_performance %>%
separate(Value, c("Score", "Description"))
Patient_Karnofsky = MDA_performance %>%
separate(Value, c("Score", "Description"))
View(Patient_Karnofsky)
Patient_Karnofsky = MDA_performance %>%
separate(Value, c("Score", "Description")) %>%
group_by(MRN) %>%
summarise(avg_karnofsky = median(as.numeric(Score)))
View(Patient_Karnofsky)
MDA_biomarker = readWorkbook(biomarker_path, sheet = 1, startRow = 1, colNames = TRUE)
MDA_biomarker %>%
filter(Biomarker %in% c("1p19q_LOH", "IDH1_R132H"))
NVGN_master = readWorkbook(NVGN_seq_path, sheet = 1, startRow = 1, colNames = TRUE)
length(unique(NVGN_master$Sample.name))
length(grep("*blood*", NVGN_master$Sample.name))
length(grep("*Blood*", NVGN_master$Sample.name))
library(GenomicDataCommons)
library(listviewer)
library(tidyverse)
library(TCGAbiolinks) # To extract information on radiation, drug, follow-up.
library(data.table)
library(dplyr)
unpaired_json = "data/ref/TCGA_WGS_GDC_legacy_UUIDs.json"
add_fields = c("cases.project.project_id",
"cases.samples.sample_type",
"cases.samples.portions.analytes.aliquots.submitter_id",
"cases.case_id")
files(legacy = TRUE) %>% facet(c('data_type')) %>% aggregations()
