head(RVJDG_sample_map)
RVJDG_merge = RVJDG_sample_map %>%  select(samplename, Barcode)  %>% rename(Original_ID = samplename)
RVJDG_merge
RVJDG_sample_map = RV_JDG_df %>%
mutate(SeqID = "RVJG") %>%
mutate(TSS = "MD") %>%
separate(col=AnalysisID, into = c("Study", "PtIdentifier", "WrongTissueID", "Analyte"), sep="-") %>%
separate(PtIdentifier, into = c("Text", "Num"), sep = "(?<=[A-Za-z])(?=[0-9])") %>%
mutate_at("Num", str_pad, width = 2, side='left', pad = 0) %>%
unite(PtIdentifier, c(Text,Num), sep = "") %>%
rename(SubjectCode = PtIdentifier) %>%
mutate(TissueCode = recode_factor(Tissue.Type.Revised, "first" = "TP", "second" = "R1", "normal" = "NB")) %>%
group_by(PatientID) %>%
filter(n() >= 3)  %>%  # Extract only trios.
unite(Barcode, c(SeqID, TSS, SubjectCode, TissueCode), sep = "-", remove = TRUE) %>%
ungroup()
RVJDG_merge = RVJDG_sample_map %>%  select(samplename, Barcode)  %>% rename(Original_ID = samplename)
RVJDG_merge
LifeHistory_barcodes = bind_rows(HongKong_merge, MDA_merge, TCGA_merge, HGBM_merge, RVJDG_merge)
str(LifeHistory_barcodes)
205/3
dim(LifeHistory_barcodes)[1]
set.seed(1)
stri_rand_strings(dim(LifeHistory_barcodes)[1], 6, "[A-Z0-9]")
uuid_LifeHistory = stri_rand_strings(dim(LifeHistory_barcodes)[1], 6, "[A-Z0-9]")
ifelse(n_distinct(uuid_LifeHistory)!=dim(LifeHistory_barcodes)[1], message(sprintf("UUIDs are unique.")), message(sprintf("WARNING! Not unique!"))
)
dim(LifeHistory_barcodes)[1]
n_distinct(uuid_LifeHistory)
ifelse(n_distinct(uuid_LifeHistory)==dim(LifeHistory_barcodes)[1],
message(sprintf("UUIDs are unique.")),
message(sprintf("WARNING! Not unique!")))
ifelse(n_distinct(uuid_LifeHistory)==dim(LifeHistory_barcodes)[1],
message("UUIDs are unique."),
message("WARNING! Not unique!"))
ifelse(n_distinct(uuid_LifeHistory)==dim(LifeHistory_barcodes)[1],
message("UUIDs are unique."),
message("WARNING! Not unique!"))
ifelse(n_distinct(uuid_LifeHistory)==dim(LifeHistory_barcodes)[1],
message("UUIDs are unique"),
message("WARNING! Not unique"))
dim(LifeHistory_barcodes)[1]
n_distinct(uuid_LifeHistory)
n_distinct(uuid_LifeHistory)==dim(LifeHistory_barcodes)[1]
names(uuid_LifeHistory)
name(uuid_LifeHistory) = "uuid"
names(uuid_LifeHistory) = "uuid"
bind_cols(LifeHistory_barcodes, uuid_LifeHistory)
names(uuid_LifeHistory) = "uuid"
bind_cols(LifeHistory_barcodes, uuid_LifeHistory)
colnames(uuid_LifeHistory)
colnames(uuid_LifeHistory) = "uuid"
uuid_LifeHistory = as.data.frame(stri_rand_strings(dim(LifeHistory_barcodes)[1], 6, "[A-Z0-9]"))
colnames(uuid_LifeHistory) = "uuid"
bind_cols(LifeHistory_barcodes, uuid_LifeHistory)
write.table(Final_Life_History, file='/Users/johnsk/Documents/Life-History/LifeHistory_Uniform_Naming_example.tsv', quote=FALSE, sep='\t', col.names = NA)
Final_Life_History = bind_cols(uuid_LifeHistory, LifeHistory_barcodes)
Final_Life_History
# Combine all 5 cohorts into one master table.
LifeHistory_barcodes = bind_rows(HongKong_merge, MDA_merge, TCGA_merge, HGBM_merge, RVJDG_merge)
## Addition of random string to use as a shortened identifier.
# Create a random string identifier for each SAMPLE in the Life History study.
set.seed(1)
uuid_LifeHistory = as.data.frame(stri_rand_strings(dim(LifeHistory_barcodes)[1], 6, "[A-Z0-9]"))
colnames(uuid_LifeHistory) = "uuid"
# Sanity check: make sure each is unique.
ifelse(n_distinct(uuid_LifeHistory)==dim(LifeHistory_barcodes)[1],
message("UUIDs are unique"),
message("WARNING! Not unique"))
# Write final combined dataset set for a data freeze.
Final_Life_History = bind_cols(uuid_LifeHistory, LifeHistory_barcodes)
Final_Life_History
write.table(Final_Life_History, file='/Users/johnsk/Documents/Life-History/LifeHistory_Uniform_Naming_example.tsv', quote=FALSE, sep='\t', col.names = NA)
write.table(Final_Life_History, file='/Users/johnsk/Documents/Life-History/LifeHistory_Uniform_Naming_example.tsv', quote=FALSE, sep='\t', col.names = NA, row.names = F)
write.table(Final_Life_History, file='/Users/johnsk/Documents/Life-History/LifeHistory_Uniform_Naming_example.tsv', quote=FALSE, sep='\t', col.names = F, row.names = F)
write.table(Final_Life_History, file='/Users/johnsk/Documents/Life-History/LifeHistory_Uniform_Naming_example.tsv', quote=FALSE, sep='\t', row.names = F)
colnames()
colnames(RVJDG_sample_map)
View(HongKong_sample_map)
sessionInfo()
HongKong_path = "/Users/johnsk/Documents/Life-History/SampleMaps.txt"
MDA_master_path = "/Users/johnsk/Documents/Life-History/ClinicalData/MDACC/MDA-Clinical-Dataset/Master Log for WGS_26Apr2018wData.xlsx"
TCGA_path = "/Users/johnsk/Documents/Life-History/ClinicalData/TCGA/LGG-GBM-samples.tsv"
RV_JDG_path = "/Users/johnsk/Documents/Life-History/ClinicalData/Roel-JDG/Roel_JDG-original_bam_map.txt"
hGBM_path = "/Users/johnsk/Documents/Life-History/ClinicalData/HenryFord/HGBM-original_bam_map.txt"
library(tidyverse)
library(openxlsx)
library(stringr)
library(stringi)
HK_df = read.table(HongKong_path, header=T)
MDA_df = readWorkbook(MDA_master_path, sheet = 2, startRow = 1, colNames = TRUE)
TCGA_df = read_tsv(TCGA_path)
RV_JDG_df = read_tsv(RV_JDG_path)
hGBM_df = read_tsv(hGBM_path)
glimpse(HK_df) # HGKG - 0# - 000# -
HK_df$Verhaak_Sample_ID = as.character(HK_df$Verhaak_Sample_ID)
HK_df$New_Sample_ID = gsub("-", "", (gsub(".*S", "S", HK_df$Verhaak_Sample_ID)))
HK_df$New_Sample_ID = gsub("bld", "NB", HK_df$New_Sample_ID)
HK_df$New_Sample_ID = gsub("tis", "R1", HK_df$New_Sample_ID)
HK_df$New_Sample_ID = gsub("T3", "R1", HK_df$New_Sample_ID)
HK_df$New_Sample_ID = str_pad(HK_df$New_Sample_ID, width = 8, side = "right", pad = 0)
# Create a new data frame to be able to map old SampleID to new sample ID.
HongKong_sample_map = HK_df %>%
mutate(SeqID = "HGKG") %>%
mutate(TSS = "HK") %>%
mutate(SubjectCode = recode_factor(Patient_ID, "CHUK5" = "0001", "CHUK4" = "0002", "CHUK3" = "0003", "CHUK2" = "0002", "CHUK1" = "0001")) %>%
rename(SampleCode = New_Sample_ID) %>%
mutate(TissueCode = recode_factor(Sample_Type, "Blood" = "NB", "Primary" = "TP", "Recurrence" = "R1")) %>%
unite(Barcode, SeqID:TissueCode, sep = "-", remove = FALSE)
# MD Anderson:
glimpse(MDA_df)
# Simplify the SAMPLE identifier to 8-digits.
MDA_df$New_Sample_ID = gsub("S", "", (gsub("-", "", MDA_df$mdacc_sx_acc)))
# Extract the 4-digit SUBJECT identifier.
MDA_df$SubjectID = sapply(strsplit(MDA_df$Jax.Lib.Prep.Customer.Sample.Name, "-"), "[", 3)
# We still don't have any information about which samples are primary, recurrent, or blood.
# Create a new MD Anderson to map the old to new sample names.
MDA_sample_map = MDA_df %>%
mutate(SeqID = "MDAC") %>%
mutate(TSS = "MD") %>%
rename(SubjectCode = SubjectID) %>%
rename(SampleCode = New_Sample_ID) %>%
mutate(TissueCode = "??") %>%
unite(Barcode, c(SeqID, TSS, SubjectCode, TissueCode), sep = "-", remove = FALSE)
# TCGA:
glimpse(TCGA_df) # TCGA - 0# - [:alnum:]{4} -
# TCGA tissue source sites.
unique(sapply(strsplit(TCGA_df$aliquot_id, "-"), "[", 2))
# Create a new TCGA to map the old to new sample names.
TCGA_sample_map = TCGA_df %>%
mutate(SeqID = "TCGA") %>%
mutate(TSS = sapply(strsplit(TCGA_df$aliquot_id, "-"), "[", 2)) %>%
mutate(SubjectCode = substring(aliquot_id, 9, 12)) %>%
mutate(TissueCode = recode_factor(substring(aliquot_id, 14, 16), "01A" = "TP", "01B" = "TP", "02A" = "R1", "02B" = "R2", "10A" = "NB", "10B" = "NB", "10D" = "NB")) %>%
unite(Barcode, c(SeqID, TSS, SubjectCode, TissueCode), sep = "-", remove = FALSE)
# RV-JDG:
# This dataset contains more samples, including some unmatched recurrences.
glimpse(RV_JDG_df)
# Modify barcode to make it the same as the other studies with only 4 characters.
RV_JDG_df$AnalysisID = gsub("JDG", "JG", RV_JDG_df$AnalysisID)
# Create a new RV_JDG sample map to connect with the old sample names.
RVJDG_sample_map = RV_JDG_df %>%
mutate(SeqID = "RVJG") %>%
mutate(TSS = "MD") %>%
separate(col=AnalysisID, into = c("Study", "PtIdentifier", "WrongTissueID", "Analyte"), sep="-") %>%
separate(PtIdentifier, into = c("Text", "Num"), sep = "(?<=[A-Za-z])(?=[0-9])") %>%
mutate_at("Num", str_pad, width = 2, side='left', pad = 0) %>%
unite(PtIdentifier, c(Text,Num), sep = "") %>%
rename(SubjectCode = PtIdentifier) %>%
mutate(TissueCode = recode_factor(Tissue.Type.Revised, "first" = "TP", "second" = "R1", "normal" = "NB")) %>%
group_by(PatientID) %>%
filter(n() >= 3)  %>%  # Extract only trios.
unite(Barcode, c(SeqID, TSS, SubjectCode, TissueCode), sep = "-", remove = TRUE) %>%
ungroup()
# HGBM:
glimpse(hGBM_df) # HGBM - 0# - 3016/3177 -
# Create a new RVJDG sample map to connect with the old sample names.
HGBM_sample_map = hGBM_df %>%
filter(samplename!="HF-3177-10-01D") %>%
mutate(SeqID = "HGBM") %>%
mutate(TSS = "HF") %>%
mutate(SubjectCode = substring(PatientID, 4, 7)) %>%
mutate(TissueCode = recode_factor(SampleType2, "P" = "TP", "R" = "R1", "N" = "NB")) %>%
unite(Barcode, c(SeqID, TSS, SubjectCode, TissueCode), sep = "-", remove = TRUE)
#############################################
# Combine 5 datasets into master table with each linker
#############################################
HongKong_merge = HongKong_sample_map %>% select(Verhaak_Sample_ID, Barcode) %>% rename(Original_ID = Verhaak_Sample_ID)
MDA_merge = MDA_sample_map %>%  select(Jax.Lib.Prep.Customer.Sample.Name, Barcode)  %>% rename(Original_ID = Jax.Lib.Prep.Customer.Sample.Name)
TCGA_merge = TCGA_sample_map %>%  select(aliquot_id, Barcode)  %>% rename(Original_ID = aliquot_id)
HGBM_merge = HGBM_sample_map %>%  select(samplename, Barcode)  %>% rename(Original_ID = samplename)
RVJDG_merge = RVJDG_sample_map %>%  select(samplename, Barcode)  %>% rename(Original_ID = samplename)
# Combine all 5 cohorts into one master table.
LifeHistory_barcodes = bind_rows(HongKong_merge, MDA_merge, TCGA_merge, HGBM_merge, RVJDG_merge)
## Addition of random string to use as a shortened identifier.
# Create a random string identifier for each SAMPLE in the Life History study.
set.seed(1)
uuid_LifeHistory = as.data.frame(stri_rand_strings(dim(LifeHistory_barcodes)[1], 6, "[A-Z0-9]"))
colnames(uuid_LifeHistory) = "uuid"
# Sanity check: make sure each is unique.
ifelse(n_distinct(uuid_LifeHistory)==dim(LifeHistory_barcodes)[1],
message("UUIDs are unique"),
message("WARNING! Not unique"))
Final_Life_History = bind_cols(uuid_LifeHistory, LifeHistory_barcodes)
head(Final_Life_History)
Life_history_all_samples = bind_cols(uuid_LifeHistory, LifeHistory_barcodes)
Final_Life_History = Life_history_all_samples %>%
separate(Barcode, c("CohortID", "TissueSourceSite", "SubjectID", "TissueType"))
View(Final_Life_History)
write.table(Final_Life_History, file='/Users/johnsk/Documents/Life-History/LifeHistory_Uniform_Naming_example.tsv', quote=FALSE, sep='\t', row.names = F)
?separate
Final_Life_History = Life_history_all_samples %>%
separate(Barcode, c("CohortID", "TissueSourceSite", "SubjectID", "TissueType"), remove = FALSE)
write.table(Final_Life_History, file='/Users/johnsk/Documents/Life-History/LifeHistory_Uniform_Naming_example.tsv', quote=FALSE, sep='\t', row.names = F)
write.table(Final_Life_History, file='/Users/johnsk/Documents/Life-History/LifeHistory_Uniform_Naming_example.txt', quote=FALSE, sep='\t', row.names = F)
head(Final_Life_History)
unique(Final_Life_History$TissueSourceSite)
TSS_path = "/Users/johnsk/Documents/Life-History/tissueSourceSite.txt"
TSS_info = read.table(TSS_path, header=T)
TSS_info = read_tsv(TSS_path)
head(TSS_info)
unique(Final_Life_History$TissueSourceSite)
TSS_info$`TSS Code`
TSS_info %>%
filter(`TSS Code` =="HF")
unique(Final_Life_History$TissueSourceSite)
TSS_info %>%
filter(`TSS Code` =="MD")
unique(Final_Life_History$TissueSourceSite)[-c("HK", "MD", "HF")]
unique(TCGA_sample_map$TSS)
TCGA_TSS = unique(TCGA_sample_map$TSS)
TSS_info %>%
filter(`TSS Code` %in% TCGA_TSS)
TSS_info %>%
filter(`TSS Code` %in% TCGA_TSS)
df = data.frame(`TSS Code`   = c("HK", "MD", "HF"),
`Source Site`  = c("Hong Kong", "MD Anderson Cancer Center", "Henry Ford Hospital (hGBM)"),
`Study Name` = c("Chinese University of Hong Kong (Ng)", "MD Anderson Cancer Center (de Groot)", "Henry Ford (Mikkelson)"),
BCR      = rep("GLASS", 3))
df
TSS_info %>%
rename(`TSS Code` = TSS.Code) %>%
rename(`Source Site` = Source.Site) %>%
rename(`Study Name` = Study.Name) %>%
filter(`TSS Code` %in% TCGA_TSS)
TSS_info
TSS_filtered = TSS_info %>%
filter(`TSS Code` %in% TCGA_TSS)
TSS_GLASS = data.frame(`TSS Code`   = c("HK", "MD", "HF"),
`Source Site`  = c("Hong Kong", "MD Anderson Cancer Center", "Henry Ford Hospital (hGBM)"),
`Study Name` = c("Chinese University of Hong Kong (Ng)", "MD Anderson Cancer Center (de Groot)", "Henry Ford (Mikkelson)"),
BCR      = rep("GLASS", 3))
TSS_filtered = TSS_info %>%
filter(`TSS Code` %in% TCGA_TSS)
TSS_TCGA_filtered = TSS_info %>%
filter(`TSS Code` %in% TCGA_TSS)
bind_rows(TSS_TCGA_filtered, TSS_GLASS)
TSS_TCGA_filtered = TSS_info %>%
filter(`TSS Code` %in% TCGA_TSS)
rename(`TSS Code` = "TSS.Code")
TSS_info %>%
filter(`TSS Code` %in% TCGA_TSS)
?rename
TSS_TCGA_filtered = TSS_info %>%
filter(`TSS Code` %in% TCGA_TSS)
TSS_TCGA_filtered = TSS_info %>%
filter(`TSS Code` %in% TCGA_TSS) %>%
rename(`TSS Code` = TSS.Code)
TSS_TCGA_filtered = TSS_info %>%
filter(`TSS Code` %in% TCGA_TSS) %>%
rename(`Source Site` = Source.Site)
str_replace( " ", "", colnames(TSS_info))
colnames(TSS_info)
gsub( " ", ".", colnames(TSS_info))
TSS_TCGA_filtered = TSS_info %>%
filter(TSS.Code %in% TCGA_TSS) %>%
bind_rows(TSS_TCGA_filtered, TSS_GLASS)
colnames(TSS_info) = gsub( " ", ".", colnames(TSS_info))
TSS_GLASS = data.frame(TSS.Code   = c("HK", "MD", "HF"),
Source.Site  = c("Hong Kong", "MD Anderson Cancer Center", "Henry Ford Hospital (hGBM)"),
Study.Name = c("Chinese University of Hong Kong (Ng)", "MD Anderson Cancer Center (de Groot)", "Henry Ford (Mikkelson)"),
BCR      = rep("GLASS", 3))
TSS_TCGA_filtered = TSS_info %>%
filter(TSS.Code %in% TCGA_TSS) %>%
bind_rows(TSS_TCGA_filtered, TSS_GLASS)
TSS_TCGA_filtered = TSS_info %>%
filter(TSS.Code %in% TCGA_TSS)
bind_rows(TSS_TCGA_filtered, TSS_GLASS)
TSS_GLASS = data.frame(TSS.Code   = c("HK", "MD", "HF"),
Source.Site  = c("Chinese University of Hong Kong (Ng)", "MD Anderson Cancer Center (de Groot)", "Henry Ford Hospital (Mikkelson)"),
Study.Name = c("Lower Grade Glioma / Glioblastoma", "Lower Grade Glioma / Glioblastoma", "Glioblastoma"),
BCR      = rep("GLASS", 3))
TSS_TCGA_filtered = TSS_info %>%
filter(TSS.Code %in% TCGA_TSS)
bind_rows(TSS_TCGA_filtered, TSS_GLASS)
TissuSourceSite_dict = bind_rows(TSS_TCGA_filtered, TSS_GLASS)
SampleType = data.frame(Code   = c("NB", "TP", "R1", "R2"),
Definition  = c("Blood Derived Normal", "Primary Tumor", "First Recurrence Tumor", "Second Recurrence Tumor"))
SampleType
write.table(SampleType_dict, file='/Users/johnsk/Documents/Life-History/SampleType_LifeHistory.txt', quote=FALSE, sep='\t', row.names = F)
SampleType_dict = data.frame(Code   = c("NB", "TP", "R1", "R2"),
Definition  = c("Blood Derived Normal", "Primary Tumor", "First Recurrence Tumor", "Second Recurrence Tumor"))
write.table(SampleType_dict, file='/Users/johnsk/Documents/Life-History/SampleType_LifeHistory.txt', quote=FALSE, sep='\t', row.names = F)
write.table(TissuSourceSite_dict, file='/Users/johnsk/Documents/Life-History/TissueSourceSite_LifeHistory.txt', quote=FALSE, sep='\t', row.names = F)
NVGN_master = readWorkbook(NVGN_seq_path, sheet = 1, startRow = 1, colNames = TRUE)
master_log_path = "/Users/johnsk/Documents/Life-History/ClinicalData/MDACC/MDA-Clinical-Dataset/Master Log for WGS_26Apr2018wData.xlsx"
molecular_profile_path = "/Users/johnsk/Documents/Life-History/ClinicalData/MDACC/MDA-Clinical-Dataset/Molecular_Profiles_With_Wildtypes_39_final.xlsx"
performance_path = "/Users/johnsk/Documents/Life-History/ClinicalData/MDACC/MDA-Clinical-Dataset/Perfomance_Status_39_final.xlsx"
biomarker_path = "/Users/johnsk/Documents/Life-History/ClinicalData/MDACC/MDA-Clinical-Dataset/Protocol_Biomarker_39_final.xlsx"
matched_pairs_path = "/Users/johnsk/Documents/Life-History/ClinicalData/MDACC/MDA-Matched-Pairs/Proactive Matched Pairs prioritized_9June2017.xlsx"
NVGN_seq_path = "/Users/johnsk/Documents/Life-History/C202SC18030593_qc_20180423/src/tables/qc.summary.xls"
library(tidyr)
library(dplyr)
library(openxlsx)
library(rjson)
library(jsonlite)
library(purrr)
library(listviewer)
library(ggplot2)
library(forcats)
MDA_master = readWorkbook(master_log_path, sheet = 2, startRow = 1, colNames = TRUE)
NVGN_master = readWorkbook(NVGN_seq_path, sheet = 1, startRow = 1, colNames = TRUE)
NVGN_seq_path = "/Users/johnsk/Documents/Life-History/C202SC18030593_qc_20180423/src/tables/qc.summary.xlsx"
NVGN_master = readWorkbook(NVGN_seq_path, sheet = 1, startRow = 1, colNames = TRUE)
View(NVGN_master)
head(NVGN_master)
strsplit(NVGN_master$Sample.name, "_")
head(MDA_master)
NVGN_master$Sample.name
MDA_master$Jax.Lib.Prep.Customer.Sample.Name
unique(NVGN_master$Sample.name)
unique(NVGN_master$Sample.name)
MDA_master$Jax.Lib.Prep.Customer.Sample.Name
View(MDA_master)
unique(NVGN_master$Sample.name)
length(unique(NVGN_master$Sample.name))
107+114
107+14
121/3
MDA_master$Jax.Lib.Prep.Customer.Sample.Name
View(MDA_master)
View(NVGN_master)
NVGN_master$Sample.name
strsplit(NVGN_master$Sample.name, "D_")
grep("*blood*", NVGN_master$Sample.name)
length(grep("*blood*", NVGN_master$Sample.name))/2
length(grep("*Blood*", NVGN_master$Sample.name))/2
NVGN_master %>%
separate(Sample.name, c("FastqID", "SampleID"))
NVGN_master %>%
separate(Sample.name, c("FastqID", "SampleID"), "D_")
?separate
tmp = NVGN_master %>%
separate(Sample.name, c("FastqID", "SampleID"), sep = "D_")
View(tmp)
tmp = NVGN_master %>%
separate(Sample.name, c("FastqID", "SampleID"), sep = "D_", remove = FALSE)
View(tmp)
head(MDA_master$Jax.Lib.Prep.Customer.Sample.Name)
tmp2 = MDA_master %>%
separate(Jax.Lib.Prep.Customer.Sample.Name, c("FastqID", "TubeID"), sep = "---", remove = FALSE) %>%
separate(TubeID, c("SampleID", "ShortenedID"), sep="____", remove= FALSE)
MDA_master %>%
separate(Jax.Lib.Prep.Customer.Sample.Name, c("FastqID", "TubeID"), sep = "---", remove = FALSE)
MDA_master %>%
separate(Jax.Lib.Prep.Customer.Sample.Name, c("FastqID", "TubeID"), sep = "---", remove = FALSE) %>%
separate(TubeID, c("SampleID", "ShortenedID"), sep="____", remove= FALSE)
tmp2 = MDA_master %>%
separate(Jax.Lib.Prep.Customer.Sample.Name, c("FastqID", "TubeID"), sep = "---", remove = FALSE)
tmp2$TubeID
MDA_master %>%
separate(Jax.Lib.Prep.Customer.Sample.Name, c("FastqID", "TubeID"), sep = "---", remove = FALSE) %>%
gsub("____", "__", MDA_master$Jax.Lib.Prep.Customer.Sample.Name)
MDA_master$LinkerID = gsub("____", "__", MDA_master$Jax.Lib.Prep.Customer.Sample.Name)
MDA_master$LinkerI
tmp2 = MDA_master %>%
separate(LinkerID, c("FastqID", "TubeID"), sep = "---", remove = FALSE) %>%
separate(TubeID, c("SampleID", "ShortenedID"), sep="__", remove= FALSE)
tmp2 = MDA_master %>%
separate(LinkerID, c("FastqID", "TubeID"), sep = "---", remove = FALSE) %>%
separate(TubeID, c("ID", "SampleID", "ShortenedID"), sep="__", remove= FALSE)
View(tmp2)
View(tmp)
View(tmp2)
sapply(strsplit(tmp$SampleID, "_"), "[", 1)
tmp$SampleID
n_distincy(tmp$SampleID)
n_distinct(tmp$SampleID)
n_distinct(NVGN_master$Sample.name)
tmp$LinkerID = sapply(strsplit(tmp$SampleID, "_"), "[", 1)
head(tmp$LinkerID)
head(tmp2$ShortenedID)
head(tmp2$ID)
?left_join
left_join(tmp, tmp2, by = c("LinkerID", "ID"))
tmp2$ID
tmp$LinkerID
left_join(tmp2, tmp, by = c("ID", "LinkerID"))
left_join(tmp2, tmp, by = c("ID" = "LinkerID"))
tmp3 = left_join(tmp2, tmp, by = c("ID" = "LinkerID"))
View(tmp3)
tmp3 = merge(tmp2, tmp, by.x = "ID", by.y = "LinkerID")
tmp2$LinkerID
tmp2$ID
tmp2$LinkerID
tmp$LinkerID
sum(tmp2$ID %in% tmp$LinkerID)
tmp3 = left_join(tmp, tmp2, by = c("LinkerID" = "ID"))
tmp2$ID %in% tmp$LinkerID
sum(tmp$LinkerID  %in% tmp2$ID)
tmp$LinkerID  %in% tmp2$ID
tmp$LinkerID[(tmp$LinkerID  %in% tmp2$ID)]
tmp$LinkerID[-(tmp$LinkerID  %in% tmp2$ID)]
tmp$LinkerID[!(tmp$LinkerID  %in% tmp2$ID)]
mybasedir =  "/Users/johnsk/Documents/Life-History/GLASS-WG/"
setwd(mybasdir)
setwd(mybasedir)
df = read.delim("data/sequencing-information/master_life_history_uniform_naming_incomplete.txt", as.is=T)
df = read.delim("data/sequencing-information/master_life_history_uniform_naming_incomplete.txt", as.is=T)
df2 = df %>% select(aliquot_uuid = uuid, sample_id = Barcode) %>%
mutate(aliquot_id = sprintf("%s-%s", sample_id, aliquot_uuid),
analyte_type = "DNA",
analysis_type = "WGS",
portion = 1) %>%
filter(grepl("TCGA", sample_id))
library(tidyverse)
library(openxlsx)
library(rjson)
library(jsonlite)
library(listviewer)
df = read.delim("data/sequencing-information/master_life_history_uniform_naming_incomplete.txt", as.is=T)
df2 = df %>% select(aliquot_uuid = uuid, sample_id = Barcode) %>%
mutate(aliquot_id = sprintf("%s-%s", sample_id, aliquot_uuid),
analyte_type = "DNA",
analysis_type = "WGS",
portion = 1) %>%
filter(grepl("TCGA", sample_id))
View(df)
View(df)
df2 = df %>% select(aliquot_uuid = uuid, sample_id = Barcode) %>%
mutate(aliquot_id = sprintf("%s-%s", sample_id, aliquot_uuid),
analyte_type = "DNA",
analysis_type = "WGS",
portion = 1) %>%
filter(grepl("HK", sample_id))
View(df2)
cases_file      = "data/manifest/tcga/cases"
samples_file    = "data/manifest/tcga/samples"
aliquots_file   = "data/manifest/tcga/aliquots"
readgroups_file = "data/manifest/tcga/readgroups"
files_file      = "data/manifest/tcga/files"
pairs_file      = "data/manifest/tcga/pairs"
df2 = read.delim("data/sequencing-information/master_life_history_uniform_naming_incomplete.txt", as.is=T)
df2 = df2 %>% select(aliquot_uuid = uuid, sample_id = Barcode) %>%
mutate(aliquot_id = sprintf("%s-%s", sample_id, aliquot_uuid),
analyte_type = "DNA",
analysis_type = "WGS",
portion = 1) %>%
filter(grepl("TCGA", sample_id))
tmp = jsonlite::read_json("data/ref/TCGA_WGS_GDC_legacy_UUIDs.json", simplifyVector=T)
View(tmp)
df = tmp %>% unnest(samples) %>%
unnest(files) %>%
unnest(readgroups) %>%
mutate(legacy_sample_id = sample_id,
sample_id = sprintf("%s-%s", case_id, sample_type_code)) %>%
left_join(df2)
View(df)
View(df2)
master_sheet = read.delim("data/sequencing-information/master_life_history_uniform_naming_incomplete.txt", as.is=T)
View(master_sheet)
alioquot_sheet = master_sheet %>% select(aliquot_uuid = uuid, sample_id = Barcode) %>%
mutate(aliquot_id = sprintf("%s-%s", sample_id, aliquot_uuid),
analyte_type = "DNA",
analysis_type = "WGS",
portion = 1) %>%
filter(grepl("HK", sample_id))
aliquot_sheet = master_sheet %>% select(aliquot_uuid = uuid, sample_id = Barcode) %>%
mutate(aliquot_id = sprintf("%s-%s", sample_id, aliquot_uuid),
analyte_type = "DNA",
analysis_type = "WGS",
portion = 1) %>%
filter(grepl("HK", sample_id))
View(aliquot_sheet)
View(master_sheet)
aliquots = aliquot_sheet %>% select(sample_id, aliquot_uuid, aliquot_id, portion, analyte_type, analysis_type) %>% distinct()
View(aliquots)
View(tmp)
df = tmp %>% unnest(samples) %>%
unnest(files) %>%
unnest(readgroups) %>%
mutate(legacy_sample_id = sample_id,
sample_id = sprintf("%s-%s", case_id, sample_type_code)) %>%
left_join(df2)
files = df %>%
mutate(file_path = sprintf("/fastscratch/barthf/GLASS-WG/data/download/%s/%s", file_uuid, file_name)) %>%
select(aliquot_id, file_path, file_name, file_uuid, file_size, file_md5sum, file_format) %>%
distinct()
View(files)
View(df2)
View(df)
hk_df = read.table(HK_file_path, col.names="file_name", stringsAsFactors = F)
mybasedir =  "/Users/johnsk/Documents/Life-History/GLASS-WG/"
setwd(mybasedir)
HK_file_path = "data/sequencing-information/HK/tmp-hk-path-list.txt"
HK_meta_path = "data/sequencing-information/HK/hong-kong-sample-maps.txt"
life_history_barcodes = "data/sequencing-information/master_life_history_uniform_naming_incomplete.txt"
library(tidyverse)
library(openxlsx)
library(rjson)
library(jsonlite)
library(listviewer)
master_sheet = read.delim("data/sequencing-information/master_life_history_uniform_naming_incomplete.txt", as.is=T)
aliquot_sheet = master_sheet %>% select(aliquot_uuid = uuid, sample_id = Barcode) %>%
mutate(aliquot_id = sprintf("%s-%s", sample_id, aliquot_uuid),
analyte_type = "DNA",
analysis_type = "WGS",
portion = 1) %>%
filter(grepl("HK", sample_id))
hk_df = read.table(HK_file_path, col.names="file_name", stringsAsFactors = F)
hk_df$sample_id = sub(".*/WG_ *(.*?) *_USPD.*", "\\1", hk_df$file_name)
HongKong_covars =  read.table(HK_meta_path, header = T, stringsAsFactors = F)
HongKong_covars$Verhaak_Sample_ID = gsub("-","_", HongKong_covars$Verhaak_Sample_ID)
hk_map_df = HongKong_covars %>% left_join(hk_df, by = c("Verhaak_Sample_ID" = "sample_id"))
View(hk_map_df)
master_sheet = read.delim("data/sequencing-information/master_life_history_uniform_naming_incomplete.txt", as.is=T)
aliquot_sheet = master_sheet %>% select(aliquot_uuid = uuid, sample_id = Barcode) %>%
mutate(aliquot_id = sprintf("%s-%s", sample_id, aliquot_uuid),
analyte_type = "DNA",
analysis_type = "WGS",
portion = 1) %>%
filter(grepl("HK", sample_id))
