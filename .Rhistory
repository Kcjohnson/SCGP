View(tmp)
df = tmp %>% unnest(samples)
df = tmp %>% unnest(samples) %>%
unnest(files)
df = tmp %>% unnest(samples) %>%
unnest(files) %>%
unnest(readgroups)
View(df)
table(df$rg_CN)
View(df)
## Insert readgroups
rgs = read.delim('data/ref/TCGA_BAM_readgroups.txt', as.is = T, header = F)
rgs = rgs %>% mutate(id = basename(dirname(V1)),
rg_ID = gsub("ID\\:","", V3),
rg_PL = gsub("PL\\:","", V4),
rg_PU = gsub("PU\\:","", V5),
rg_LB = gsub("LB\\:","", V6),
rg_PI = gsub("PI\\:","", V7),
rg_DT = gsub("DT\\:","", V8),
rg_SM = gsub("SM\\:","", V9),
rg_CN = gsub("CN\\:","", V10)) %>%
select(-starts_with("V"))
View(rgs)
View(rgs)
## Insert readgroups
rgs = read.delim('data/ref/TCGA_BAM_readgroups.txt', as.is = T, header = F)
View(rgs)
## Insert readgroups
rgs = readLines('data/ref/TCGA_BAM_readgroups.txt', as.is = T, header = F)
## Insert readgroups
rgs = readLines('data/ref/TCGA_BAM_readgroups.txt')
rgs[1]
rgs = read.delim('data/ref/TCGA_BAM_readgroups.txt', as.is = T, header = F)
rgs = rgs %>% mutate(id = basename(dirname(V1)),
rg_ID = gsub("ID\\:","", V3),
rg_PL = gsub("PL\\:","", V4),
rg_PU = gsub("PU\\:","", V5),
rg_LB = gsub("LB\\:","", V6),
rg_PI = gsub("PI\\:","", V7),
rg_DT = gsub("DT\\:","", V8),
rg_SM = gsub("SM\\:","", V9),
rg_CN = gsub("CN\\:","", V10)) %>%
select(-starts_with("V"))
View(rgs)
gsub("^(.*)\\t","\\1",rgs)
## Insert readgroups
rgs = readLines('data/ref/TCGA_BAM_readgroups.txt')
gsub("^(.*)\\t","\\1",rgs)
gsub("^(\.*)\\t","\\1",rgs)
gsub("^(\\.*)\\t","\\1",rgs)
gsub("^(\\.*)\\t","\\1",rgs,perl=T)
gsub("^(.*)\\t","\\1",rgs,perl=T)
gsub("\\t@RG.*$","",rgs)
basename(dirname(gsub("\\t@RG.*$","",rgs)))
gsub("^.*ID:([A-Z0-9\.]+).*$", "\\1", rgs)
gsub("^.*ID:([A-Z0-9\\.]+).*$", "\\1", rgs)
gsub("^.*ID:([A-Z0-9\\.]+).*$", "\\1", rgs) == df$rg_ID
sort(gsub("^.*ID:([A-Z0-9\\.]+).*$", "\\1", rgs)) == sort(df$rg_ID)
## Insert readgroups
rgs = readLines('data/ref/TCGA_BAM_readgroups.txt')
rgs = data.frame(id = basename(dirname(gsub("\\t@RG.*$","",rgs))),
RGID = gsub("^.*ID:([A-Z0-9\\.]+).*$", "\\1", rgs),
RGPL = gsub("^.*PL:([A-Z0-9\\.]+).*$", "\\1", rgs),
RGPU = gsub("^.*PU:([A-Z0-9\\.]+).*$", "\\1", rgs),
RGLB = gsub("^.*LB:([A-Z0-9\\.]+).*$", "\\1", rgs),
RGPI = gsub("^.*PI:([A-Z0-9\\.]+).*$", "\\1", rgs),
RGDT = gsub("^.*DT:([A-Z0-9\\.]+).*$", "\\1", rgs),
RGSM = gsub("^.*SM:([A-Z0-9\\.]+).*$", "\\1", rgs),
RGCN = gsub("^.*CN:([A-Z0-9\\.]+).*$", "\\1", rgs))
View(rgs)
rgs = data.frame(id = basename(dirname(gsub("\\t@RG.*$","",rgs))),
RGID = gsub("^.*ID:([\\w\\.]+).*$", "\\1", rgs),
RGPL = gsub("^.*PL:([\\w\\.]+).*$", "\\1", rgs),
RGPU = gsub("^.*PU:([\\w\\.]+).*$", "\\1", rgs),
RGLB = gsub("^.*LB:([\\w\\.]+).*$", "\\1", rgs),
RGPI = gsub("^.*PI:([\\w\\.]+).*$", "\\1", rgs),
RGDT = gsub("^.*DT:([\\w\\.]+).*$", "\\1", rgs),
RGSM = gsub("^.*SM:([\\w\\.]+).*$", "\\1", rgs),
RGCN = gsub("^.*CN:([\\w\\.]+).*$", "\\1", rgs))
View(rgs)
## Insert readgroups
rgs = readLines('data/ref/TCGA_BAM_readgroups.txt')
rgs = data.frame(id = basename(dirname(gsub("\\t@RG.*$","",rgs))),
RGID = gsub("^.*ID:([\\w\\.]+).*$", "\\1", rgs),
RGPL = gsub("^.*PL:([\\w\\.]+).*$", "\\1", rgs),
RGPU = gsub("^.*PU:([\\w\\.]+).*$", "\\1", rgs),
RGLB = gsub("^.*LB:([\\w\\.]+).*$", "\\1", rgs),
RGPI = gsub("^.*PI:([\\w\\.]+).*$", "\\1", rgs),
RGDT = gsub("^.*DT:([\\w\\.]+).*$", "\\1", rgs),
RGSM = gsub("^.*SM:([\\w\\.]+).*$", "\\1", rgs),
RGCN = gsub("^.*CN:([\\w\\.]+).*$", "\\1", rgs))
View(rgs)
## Insert readgroups
rgs = readLines('data/ref/TCGA_BAM_readgroups.txt')
rgs = data.frame(id = basename(dirname(gsub("\\t@RG.*$","",rgs))),
RGID = gsub("^.*ID:([\\w\\.]+).*$", "\\1", rgs, perl=T),
RGPL = gsub("^.*PL:([\\w\\.]+).*$", "\\1", rgs),
RGPU = gsub("^.*PU:([\\w\\.]+).*$", "\\1", rgs),
RGLB = gsub("^.*LB:([\\w\\.]+).*$", "\\1", rgs),
RGPI = gsub("^.*PI:([\\w\\.]+).*$", "\\1", rgs),
RGDT = gsub("^.*DT:([\\w\\.]+).*$", "\\1", rgs),
RGSM = gsub("^.*SM:([\\w\\.]+).*$", "\\1", rgs),
RGCN = gsub("^.*CN:([\\w\\.]+).*$", "\\1", rgs))
View(rgs)
## Insert readgroups
rgs = readLines('data/ref/TCGA_BAM_readgroups.txt')
rgs = data.frame(id = basename(dirname(gsub("\\t@RG.*$","",rgs))),
RGID = gsub("^.*ID:([\\w\\.]+).*$", "\\1", rgs, perl=T),
RGPL = gsub("^.*PL:([\\w\\.]+).*$", "\\1", rgs, perl=T),
RGPU = gsub("^.*PU:([\\w\\.]+).*$", "\\1", rgs, perl=T),
RGLB = gsub("^.*LB:([\\w\\.]+).*$", "\\1", rgs, perl=T),
RGPI = gsub("^.*PI:([\\w\\.]+).*$", "\\1", rgs, perl=T),
RGDT = gsub("^.*DT:([\\w\\.]+).*$", "\\1", rgs, perl=T),
RGSM = gsub("^.*SM:([\\w\\.]+).*$", "\\1", rgs, perl=T),
RGCN = gsub("^.*CN:([\\w\\.]+).*$", "\\1", rgs, perl=T))
View(rgs)
## Insert readgroups
rgs = readLines('data/ref/TCGA_BAM_readgroups.txt')
rgs
gsub("(?(?=^.*LB:)(?:^.*LB:([\w-]+).*$)|)", "\\1", rgs)
gsub("(?(?=^.*LB:)(?:^.*LB:([\\w-]+).*$)|)", "\\1", rgs)
gsub("(?(?=^.*LB:)(?:^.*LB:([\\w-]+).*$)|)", "\\1", rgs, perl = T)
## Insert readgroups
rgs = readLines('data/ref/TCGA_BAM_readgroups.txt')
rgs = data.frame(id = basename(dirname(gsub("\\t@RG.*$","",rgs))),
RGID = gsub("^.*ID:([\\w\\.]+).*$", "\\1", rgs, perl=T),
RGPL = gsub("^.*PL:([\\w\\.]+).*$", "\\1", rgs, perl=T),
RGPU = gsub("^.*PU:([\\w\\.]+).*$", "\\1", rgs, perl=T),
RGLB = gsub("^.*LB:([\\w\\.]+).*$", "\\1", rgs, perl=T),
RGPI = gsub("^.*PI:([\\w\\.]+).*$", "\\1", rgs, perl=T),
RGDT = gsub("^.*DT:([\\w\\.]+).*$", "\\1", rgs, perl=T),
RGSM = gsub("^.*SM:([\\w\\.]+).*$", "\\1", rgs, perl=T),
RGCN = gsub("^.*CN:([\\w\\.]+).*$", "\\1", rgs, perl=T))
View(rgs)
rgs = data.frame(id = basename(dirname(gsub("\\t@RG.*$","",rgs))),
RGID = gsub("^.*ID:([\\w\\.\\-]+).*$", "\\1", rgs, perl=T),
RGPL = gsub("^.*PL:([\\w\\.\\-]+).*$", "\\1", rgs, perl=T),
RGPU = gsub("^.*PU:([\\w\\.\\-]+).*$", "\\1", rgs, perl=T),
RGLB = gsub("^.*LB:([\\w\\.\\-]+).*$", "\\1", rgs, perl=T),
RGPI = gsub("^.*PI:([\\w\\.\\-]+).*$", "\\1", rgs, perl=T),
RGDT = gsub("^.*DT:([\\w\\.\\-]+).*$", "\\1", rgs, perl=T),
RGSM = gsub("^.*SM:([\\w\\.\\-]+).*$", "\\1", rgs, perl=T),
RGCN = gsub("^.*CN:([\\w\\.\\-]+).*$", "\\1", rgs, perl=T))
## Insert readgroups
rgs = readLines('data/ref/TCGA_BAM_readgroups.txt')
rgs = data.frame(id = basename(dirname(gsub("\\t@RG.*$","",rgs))),
RGID = gsub("^.*ID:([\\w\\.\\-]+).*$", "\\1", rgs, perl=T),
RGPL = gsub("^.*PL:([\\w\\.\\-]+).*$", "\\1", rgs, perl=T),
RGPU = gsub("^.*PU:([\\w\\.\\-]+).*$", "\\1", rgs, perl=T),
RGLB = gsub("^.*LB:([\\w\\.\\-]+).*$", "\\1", rgs, perl=T),
RGPI = gsub("^.*PI:([\\w\\.\\-]+).*$", "\\1", rgs, perl=T),
RGDT = gsub("^.*DT:([\\w\\.\\-]+).*$", "\\1", rgs, perl=T),
RGSM = gsub("^.*SM:([\\w\\.\\-]+).*$", "\\1", rgs, perl=T),
RGCN = gsub("^.*CN:([\\w\\.\\-]+).*$", "\\1", rgs, perl=T))
View(rgs)
## Insert readgroups
rgs = readLines('data/ref/TCGA_BAM_readgroups.txt')
rgs = data.frame(id = basename(dirname(gsub("\\t@RG.*$","",rgs))),
RGID = gsub("^.*ID:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPL = gsub("^.*PL:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPU = gsub("^.*PU:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGLB = gsub("^.*LB:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPI = gsub("^.*PI:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGDT = gsub("^.*DT:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGSM = gsub("^.*SM:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGCN = gsub("^.*CN:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T))
View(rgs)
rgs = data.frame(id = basename(dirname(gsub("\\t@RG.*$","",rgs))),
RGID = gsub("^.*ID:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPL = gsub("^.*PL:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPU = gsub("^.*PU:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGLB = gsub("^.*LB:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPI = gsub("^.*PI:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGDT = gsub("^.*DT:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGSM = gsub("^.*SM:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGCN = gsub("^.*CN:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T)) %>%
mutate(RGPI = ifelse(RGPI != 0, NA, RGPI))
View(rgs)
## Insert readgroups
rgs = readLines('data/ref/TCGA_BAM_readgroups.txt')
rgs = data.frame(id = basename(dirname(gsub("\\t@RG.*$","",rgs))),
RGID = gsub("^.*ID:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPL = gsub("^.*PL:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPU = gsub("^.*PU:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGLB = gsub("^.*LB:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPI = gsub("^.*PI:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGDT = gsub("^.*DT:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGSM = gsub("^.*SM:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGCN = gsub("^.*CN:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T)) %>%
mutate(RGPI = ifelse(RGPI != 0, NA, RGPI))
View(rgs)
## Insert readgroups
rgs = readLines('data/ref/TCGA_BAM_readgroups.txt')
rgs = data.frame(id = basename(dirname(gsub("\\t@RG.*$","",rgs))),
RGID = gsub("^.*ID:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPL = gsub("^.*PL:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPU = gsub("^.*PU:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGLB = gsub("^.*LB:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPI = gsub("^.*PI:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGDT = gsub("^.*DT:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGSM = gsub("^.*SM:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGCN = gsub("^.*CN:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T)) %>%
mutate(RGPI = ifelse(RGPI != 0, NA, RGPI))
View(rgs)
rgs = data.frame(id = basename(dirname(gsub("\\t@RG.*$","",rgs))),
RGID = gsub("^.*ID:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPL = gsub("^.*PL:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPU = gsub("^.*PU:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGLB = gsub("^.*LB:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPI = gsub("^.*PI:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGDT = gsub("^.*DT:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGSM = gsub("^.*SM:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGCN = gsub("^.*CN:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T)) %>%
mutate(RGPI = ifelse(RGPI == 0, 0, NA))
View(rgs)
## Insert readgroups
rgs = readLines('data/ref/TCGA_BAM_readgroups.txt')
rgs = data.frame(id = basename(dirname(gsub("\\t@RG.*$","",rgs))),
RGID = gsub("^.*ID:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPL = gsub("^.*PL:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPU = gsub("^.*PU:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGLB = gsub("^.*LB:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPI = gsub("^.*PI:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGDT = gsub("^.*DT:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGSM = gsub("^.*SM:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGCN = gsub("^.*CN:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T)) %>%
mutate(RGPI = ifelse(RGPI == 0, 0, NA))
View(rgs)
## Insert readgroups
readgroups = readLines('data/ref/TCGA_BAM_readgroups.txt')
readgroups = data.frame(id = basename(dirname(gsub("\\t@RG.*$","",rgs))),
RGID = gsub("^.*ID:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPL = gsub("^.*PL:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPU = gsub("^.*PU:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGLB = gsub("^.*LB:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPI = gsub("^.*PI:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGDT = gsub("^.*DT:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGSM = gsub("^.*SM:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGCN = gsub("^.*CN:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T)) %>%
mutate(RGPI = ifelse(RGPI == 0, 0, NA))
## Aliquots
aliquots = read.delim("data/sequencing-information/master_life_history_uniform_naming_incomplete.txt", as.is=T)
View(aliquots)
## Inspect data types
files(legacy = TRUE) %>% facet(c('data_type')) %>% aggregations()
files = df %>%
mutate(file_path = sprinftf("/fastscratch/barthf/GLASS-WG/download/%s/%s", file_uuid, file_name)) %>%
select(file_path, file_name, file_uuid, file_size, file_md5sum, file_format)
files = df %>%
mutate(file_path = sprintf("/fastscratch/barthf/GLASS-WG/download/%s/%s", file_uuid, file_name)) %>%
select(file_path, file_name, file_uuid, file_size, file_md5sum, file_format)
View(files)
files = df %>%
mutate(file_path = sprintf("/fastscratch/barthf/GLASS-WG/download/%s/%s", file_uuid, file_name)) %>%
select(file_path, file_name, file_uuid, file_size, file_md5sum, file_format) %>%
distinct()
View(files)
## Readgroups
readgroups = readLines('data/ref/TCGA_BAM_readgroups.txt')
readgroups = data.frame(file_uuid = basename(dirname(gsub("\\t@RG.*$","",rgs))),
RGID = gsub("^.*ID:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPL = gsub("^.*PL:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPU = gsub("^.*PU:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGLB = gsub("^.*LB:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPI = gsub("^.*PI:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGDT = gsub("^.*DT:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGSM = gsub("^.*SM:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGCN = gsub("^.*CN:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T)) %>%
mutate(RGPI = ifelse(RGPI == 0, 0, NA))
## Readgroups
readgroups = readLines('data/ref/TCGA_BAM_readgroups.txt')
readgroups = data.frame(file_uuid = basename(dirname(gsub("\\t@RG.*$","",rgs))),
RGID = gsub("^.*ID:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPL = gsub("^.*PL:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPU = gsub("^.*PU:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGLB = gsub("^.*LB:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPI = gsub("^.*PI:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGDT = gsub("^.*DT:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGSM = gsub("^.*SM:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGCN = gsub("^.*CN:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T)) %>%
mutate(RGPI = ifelse(RGPI == 0, 0, NA))
## Readgroups
rgs = readLines('data/ref/TCGA_BAM_readgroups.txt')
readgroups = data.frame(file_uuid = basename(dirname(gsub("\\t@RG.*$","",rgs))),
RGID = gsub("^.*ID:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPL = gsub("^.*PL:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPU = gsub("^.*PU:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGLB = gsub("^.*LB:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPI = gsub("^.*PI:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGDT = gsub("^.*DT:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGSM = gsub("^.*SM:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGCN = gsub("^.*CN:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T)) %>%
mutate(RGPI = ifelse(RGPI == 0, 0, NA))
View(readgroups)
tmp = jsonlite::read_json("data/ref/TCGA_WGS_GDC_legacy_UUIDs.json", simplifyVector=T)
df = tmp %>% unnest(samples) %>%
unnest(files) %>%
unnest(readgroups) %>%
mutate(sample_id = sprinft("%s-%s", case_id, sample_type_code))
View(df)
df = tmp %>% unnest(samples) %>%
unnest(files) %>%
unnest(readgroups) %>%
mutate(sample_id = sprintf("%s-%s", case_id, sample_type_code))
View(df)
## Aliquots
df2 = read.delim("data/sequencing-information/master_life_history_uniform_naming_incomplete.txt", as.is=T)
df2 = df2 %>% select(aliquot_uuid = uuid, sample_id = Barcode) %>%
mutate(aliquot_barcode = sprintf("%s-%s", sample_id, aliquot_uuid))
View(df2)
any(duplicated(df2$sample_id))
grepl("TCGA", df2$sample_id)
## Aliquots
df2 = read.delim("data/sequencing-information/master_life_history_uniform_naming_incomplete.txt", as.is=T)
df2 = df2 %>% select(aliquot_uuid = uuid, sample_id = Barcode) %>%
mutate(aliquot_barcode = sprintf("%s-%s", sample_id, aliquot_uuid)) %>%
filter(grepl("TCGA", sample_id))
any(duplicated(df2$sample_id))
View(df2)
## Aliquots
df2 = read.delim("data/sequencing-information/master_life_history_uniform_naming_incomplete.txt", as.is=T)
df2 = df2 %>% select(aliquot_uuid = uuid, sample_id = Barcode) %>%
mutate(aliquot_id = sprintf("%s-%s", sample_id, aliquot_uuid),
analyte_type = "DNA",
analysis_type = "WGS",
portion = 1) %>%
filter(grepl("TCGA", sample_id))
tmp = jsonlite::read_json("data/ref/TCGA_WGS_GDC_legacy_UUIDs.json", simplifyVector=T)
df = tmp %>% unnest(samples) %>%
unnest(files) %>%
unnest(readgroups) %>%
mutate(sample_id = sprintf("%s-%s", case_id, sample_type_code)) %>%
left_join(df2)
files = df %>%
mutate(file_path = sprintf("/fastscratch/barthf/GLASS-WG/download/%s/%s", file_uuid, file_name)) %>%
select(file_path, file_name, file_uuid, file_size, file_md5sum, file_format) %>%
distinct()
## Readgroups
rgs = readLines('data/ref/TCGA_BAM_readgroups.txt')
readgroups = data.frame(file_uuid = basename(dirname(gsub("\\t@RG.*$","",rgs))),
RGID = gsub("^.*ID:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPL = gsub("^.*PL:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPU = gsub("^.*PU:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGLB = gsub("^.*LB:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPI = gsub("^.*PI:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGDT = gsub("^.*DT:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGSM = gsub("^.*SM:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGCN = gsub("^.*CN:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T)) %>%
mutate(RGPI = ifelse(RGPI == 0, 0, NA)) %>%
left_join(select(df, file_uuid, aliquot_id))
## Readgroups
rgs = readLines('data/ref/TCGA_BAM_readgroups.txt')
readgroups = data.frame(file_uuid = basename(dirname(gsub("\\t@RG.*$","",rgs))),
RGID = gsub("^.*ID:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPL = gsub("^.*PL:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPU = gsub("^.*PU:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGLB = gsub("^.*LB:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPI = gsub("^.*PI:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGDT = gsub("^.*DT:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGSM = gsub("^.*SM:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGCN = gsub("^.*CN:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
stringsAsFactors = F) %>%
mutate(RGPI = ifelse(RGPI == 0, 0, NA)) %>%
left_join(select(df, file_uuid, aliquot_id))
## Readgroups
rgs = readLines('data/ref/TCGA_BAM_readgroups.txt')
readgroups = data.frame(file_uuid = basename(dirname(gsub("\\t@RG.*$","",rgs))),
RGID = gsub("^.*ID:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPL = gsub("^.*PL:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPU = gsub("^.*PU:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGLB = gsub("^.*LB:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPI = gsub("^.*PI:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGDT = gsub("^.*DT:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGSM = gsub("^.*SM:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGCN = gsub("^.*CN:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
stringsAsFactors = F) %>%
mutate(RGPI = ifelse(RGPI == 0, 0, NA)) %>%
left_join(select(df, file_uuid, aliquot_id)) %>%
select(file_uuid, aliquot_id, everything())
### aliquots
aliquots = df %>% select(sample_id, aliquot_uuid, aliquot_id, portion, analyte_type, analysis_type) %>% distinct()
View(aliquots)
## Samples
samples = df %>% select(case_id, sample_id, sample_type) %>% distinct()
## Samples
samples = df %>% select(case_id, sample_id, sample_type = sample_type_code) %>% distinct()
table(samples$sample_type)
## Pairs
p1 = samples %>% filter(sample_type %in% c("TP", "NB")) %>% spread(sample_type, sample_id)
View(p1)
## Pairs
p1 = samples %>% filter(sample_type %in% c("TP", "NB")) %>%
spread(sample_type, sample_id) %>%
mutate(pair_id = TP) %>%
select(case_id, pair_id, tumor_sample_id = TP, normal_sample_id = NB)
p2 = samples %>% filter(sample_type %in% c("R1", "NB")) %>%
spread(sample_type, sample_id) %>%
mutate(pair_id = R1) %>%
select(case_id, pair_id, tumor_sample_id = R1, normal_sample_id = NB)
p3 = samples %>% filter(sample_type %in% c("R2", "NB")) %>%
spread(sample_type, sample_id) %>%
mutate(pair_id = R2) %>%
select(case_id, pair_id, tumor_sample_id = R2, normal_sample_id = NB)
View(p1)
View(p2)
View(p3)
View(df2)
View(df2)
## Aliquots
df2 = read.delim("data/sequencing-information/master_life_history_uniform_naming_incomplete.txt", as.is=T)
df2 = df2 %>% select(aliquot_uuid = uuid, sample_id = Barcode) %>%
mutate(aliquot_id = sprintf("%s-%s", sample_id, aliquot_uuid),
analyte_type = "DNA",
analysis_type = "WGS",
portion = 1) %>%
filter(grepl("TCGA", sample_id))
library(tidyverse)
## Aliquots
df2 = read.delim("data/sequencing-information/master_life_history_uniform_naming_incomplete.txt", as.is=T)
df2 = df2 %>% select(aliquot_uuid = uuid, sample_id = Barcode) %>%
mutate(aliquot_id = sprintf("%s-%s", sample_id, aliquot_uuid),
analyte_type = "DNA",
analysis_type = "WGS",
portion = 1) %>%
filter(grepl("TCGA", sample_id))
View(df2)
tmp = jsonlite::read_json("data/ref/TCGA_WGS_GDC_legacy_UUIDs.json", simplifyVector=T)
df = tmp %>% unnest(samples) %>%
unnest(files) %>%
unnest(readgroups) %>%
mutate(sample_id = sprintf("%s-%s", case_id, sample_type_code)) %>%
left_join(df2)
files = df %>%
mutate(file_path = sprintf("/fastscratch/barthf/GLASS-WG/download/%s/%s", file_uuid, file_name)) %>%
select(file_path, file_name, file_uuid, file_size, file_md5sum, file_format) %>%
distinct()
## Readgroups
rgs = readLines('data/ref/TCGA_BAM_readgroups.txt')
readgroups = data.frame(file_uuid = basename(dirname(gsub("\\t@RG.*$","",rgs))),
RGID = gsub("^.*ID:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPL = gsub("^.*PL:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPU = gsub("^.*PU:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGLB = gsub("^.*LB:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGPI = gsub("^.*PI:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGDT = gsub("^.*DT:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGSM = gsub("^.*SM:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
RGCN = gsub("^.*CN:([\\w\\.\\-\\:]+).*$", "\\1", rgs, perl=T),
stringsAsFactors = F) %>%
mutate(RGPI = ifelse(RGPI == 0, 0, NA)) %>%
left_join(select(df, file_uuid, aliquot_id)) %>%
select(file_uuid, aliquot_id, everything())
### aliquots
aliquots = df %>% select(sample_id, aliquot_uuid, aliquot_id, portion, analyte_type, analysis_type) %>% distinct()
## Samples
samples = df %>% select(case_id, sample_id, sample_type = sample_type_code) %>% distinct()
### Cases
cases = df %>% select(case_id, project_id = case_project)
## Pairs
p1 = samples %>% filter(sample_type %in% c("TP", "NB")) %>%
spread(sample_type, sample_id) %>%
mutate(pair_id = TP) %>%
select(case_id, pair_id, tumor_sample_id = TP, normal_sample_id = NB)
p2 = samples %>% filter(sample_type %in% c("R1", "NB")) %>%
spread(sample_type, sample_id) %>%
mutate(pair_id = R1) %>%
select(case_id, pair_id, tumor_sample_id = R1, normal_sample_id = NB)
p3 = samples %>% filter(sample_type %in% c("R2", "NB")) %>%
spread(sample_type, sample_id) %>%
mutate(pair_id = R2) %>%
select(case_id, pair_id, tumor_sample_id = R2, normal_sample_id = NB)
pairs = rbind(p1,p2,p3) %>% filter(complete.cases(tumor_sample_id, normal_sample_id))
View(pairs)
jsonlite::toJSON(pairs, pretty = T)
write(jsonlite::toJSON(cases, pretty = T), file = "data/manifest/tcga/cases.json")
write(jsonlite::toJSON(samples, pretty = T), file = "data/manifest/tcga/samples.json")
write(jsonlite::toJSON(aliquots, pretty = T), file = "data/manifest/tcga/aliquots.json")
write(jsonlite::toJSON(readgroups, pretty = T), file = "data/manifest/tcga/readgroups.json")
write(jsonlite::toJSON(pairs, pretty = T), file = "data/manifest/tcga/pairs.json")
sessionInfo()
library(GenomicDataCommons)
sessionInfo()
source('https://bioconductor.org/biocLite.R')
biocLite('Bioconductor/GenomicDataCommons')
biocLite("devtools")
source('https://bioconductor.org/biocLite.R')
biocLite('Bioconductor/GenomicDataCommons')
library(GenomicDataCommons)
library(GenomicDataCommons)
sessionInfo()
## Inspect data types
files(legacy = TRUE) %>% facet(c('data_type')) %>% aggregations()
## Get a list of all WXS/RNA-Seq aligned BAM files from primary tumors
fq = files(legacy = TRUE) %>%
GenomicDataCommons::filter( ~ cases.project.project_id %in% c("TCGA-LGG", "TCGA-GBM") &
experimental_strategy == "WGS" &
data_type == "Aligned reads") %>%
GenomicDataCommons::select(c(default_fields(files()), add_fields))
add_fields = c("cases.project.project_id",
"cases.samples.sample_type",
"cases.samples.portions.analytes.aliquots.submitter_id")
## Inspect data types
files(legacy = TRUE) %>% facet(c('data_type')) %>% aggregations()
## Get a list of all WXS/RNA-Seq aligned BAM files from primary tumors
fq = files(legacy = TRUE) %>%
GenomicDataCommons::filter( ~ cases.project.project_id %in% c("TCGA-LGG", "TCGA-GBM") &
experimental_strategy == "WGS" &
data_type == "Aligned reads") %>%
GenomicDataCommons::select(c(default_fields(files()), add_fields))
message(sprintf("Found %s hits", GenomicDataCommons::count(fq)))
## Extract results
fres = results_all(fq)
sessionInfo()
